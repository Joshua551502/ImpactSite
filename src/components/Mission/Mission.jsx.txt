"use client";
import React, { useEffect, useRef } from "react";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";

gsap.registerPlugin(ScrollTrigger);

export default function Mission() {
  const containerRef = useRef(null);

  useEffect(() => {
    const spans = containerRef.current.querySelectorAll("span");
  
    requestAnimationFrame(() => {
      ScrollTrigger.refresh(); // important
  
      gsap.timeline({
        scrollTrigger: {
          trigger: containerRef.current,
          start: "top 60%",
          end: "top 20%",
          scrub: 0.3,
          markers: true,
          scroller: document.querySelector("main"), // ðŸ‘ˆ Add this line!
        },
      }).to(spans, {
        opacity: 1,
        y: 0,
        stagger: 0.1,
        ease: "none",
      });
    });
  
    return () => ScrollTrigger.getAll().forEach(trigger => trigger.kill());
  }, []);
  
  

  const words = "Weâ€™re on a mission to help put back what we have broken and support those who believe in the same vision.".split(
    " "
  );

  return (
    <div
      style={{
        backgroundColor: "black",
        color: "white",
        minHeight: "300vh",
        padding: "100px",
        fontFamily: "'Playfair Display', serif",
      }}
    >
      <h1 style={{ fontSize: "24px" }}>Scroll down</h1>

      <div
        id="missionText"
        ref={containerRef}
        style={{
          fontSize: "64px",
          fontWeight: "bold",
          lineHeight: "1.5",
          marginTop: "50vh",
        }}
      >
        {words.map((word, i) => (
          <span
            key={i}
            style={{
              opacity: 0,
              transform: "translateY(20px)",
              display: "inline-block",
              marginRight: "8px",
              transition: "opacity 0.3s ease, transform 0.3s ease",
            }}
          >
            {word}
          </span>
        ))}
      </div>
    </div>
  );
}
